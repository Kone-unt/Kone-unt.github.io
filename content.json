{"meta":{"title":"淋过最大的雨","subtitle":"烈日下的不回头","description":null,"author":"Kone","url":"https://blog.konebtbx.com","root":"/"},"pages":[{"title":"","date":"2019-03-17T03:53:51.114Z","updated":"2019-03-17T03:53:51.114Z","comments":false,"path":"categories/index.html","permalink":"https://blog.konebtbx.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-03-17T03:52:54.012Z","updated":"2019-03-17T03:52:54.012Z","comments":false,"path":"tags/index.html","permalink":"https://blog.konebtbx.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"从零开始搭建Hexo主题个人博客","slug":"从零开始搭建Hexo主题个人博客","date":"2019-03-18T15:01:49.000Z","updated":"2019-03-19T06:46:47.313Z","comments":true,"path":"2019/03/18/从零开始搭建Hexo主题个人博客/","link":"","permalink":"https://blog.konebtbx.com/2019/03/18/从零开始搭建Hexo主题个人博客/","excerpt":"","text":"前言你曾羡慕过那些大佬花里胡哨的个人博客吗？好，没有是吧，不管，反正这是一篇关于如何使用Hexo博客框架搭建属于自己的个人博客，并部署到GitHub上的详细实操教程，废话不多说，让我们开始吧！ 环境要求 GitHub Nodejs Hexo 一、安装Git前往Git下载页面选择自己的系统安装对应的版本即可。安装完成后可以通过鼠标右键菜单了看到Git GUi Here和git Bash Here，说明安装成功啦！ 安装Git 二、安装NodeJs前往nodejs下载页面选择对应系统的安装程序即可。安装过程均选择默认下一步就可以迅速的安装好。 安装NodeJs 三、安装Hexo在你未来搭建博客的文件夹下（如我个人的路径：E:\\MYBLOG），右键选择Git Bash Here打开git控制台，输入命令在全局安装Hexo博客搭建工具: $ npm install -g hexo-cli 等待安装完成后，在命令行中输入hexo version能显示出Hexo的版本号说明安装成功。 安装Hexo 本地搭建博客一、初始化博客在博客根目录下（如我个人的路径：E:\\MYBLOG），运行Hexo初始化命令，其中folder为你指定初始化的文件夹名称： $ hexo init &lt;folder&gt; $ cd &lt;folder&gt; $ npm install 初始化完成之后，可以发现指定的文件夹下多了许多文件，目录如下： . ├── _config.yml ├── package.json ├── scaffolds ├── source | ├── _drafts | └── _posts └── themes 具体每个文件夹以及文件的作用可参考Hexo官方文档。 二、本地运行博客在博客根目录下，运行命令hexo generate（缩写为hexo g）生成博客网站的静态文件，运行命令完成后，在目录下会发现多了一个public的文件夹；接着运行命令hexo server（缩写为hexo s）在本地启动服务器运行博客。 启动服务器 服务器默认情况下，访问网址为：http://localhost:4000/ 在浏览器中打开查看效果： 本地博客效果 将本地博客部署到GitHub一、注册GitHub账号（已有账号的跳过此步骤）前往GitHub官网，点击右上角的Sign up 按步骤填写注册账号。 二、创建GitHub仓库1.点击右上角+号，选择New repository新建仓库。 2.按下图填写，其中Repository Name自己按喜好填写，将用于访问你的个人博客。 创建仓库 三、配置SSH连接1.首先查看你要先看看你的本机是否存在SSH keys，方法： $ cd ~/.ssh 查看本机用户目录下是否有.ssh文件夹，若有跳过第2步，进行第3步。 2.生成ssh密钥，在命令行输入： $ ssh-keygen -t rsa -C &quot;your_email@example.com&quot; 生成完密钥后，输入命令，查看生成的密钥并复制下来： $ cat ~/.ssh/id_rsa.pub 3.在GitHub上选择 头像 &gt;&gt; Settings &gt;&gt; SSH and GPG keys &gt;&gt; New SSH key，然后将第2步复制的ssh key粘贴进去，点保存即可。 添加SSH keys 4.设置用户信息 $ git config --global user.name &quot;your_name&quot; //用户名 $ git config --global user.email &quot;your_email@expamle.com&quot; //邮箱 至此，ssh连接配置就完成了，可以与GitHub进行连接了。 四、将本地的Hexo文件上传至GitHub1.打开刚刚创建的仓库，复制地址链接。 复制链接 2.打开博客根目录（如我个人的目录为：E:\\MYBLOG\\Hexo），找到配置文件_config.yml并打开，滚动到最后deploy项： 配置_config.yml 3.在博客根目录下运行命令，安装hexo部署到git的插件，之后运行hexo generate和hexo deploy（缩写为hexo g -d）。 $ npm install hexo-deployer-git --save $ hexo generate $ hexo deploy 至此，你的博客就已经部署到github服务器上了，可以通过GitHub地址（为你的&lt;仓库名&gt;.github.io）访问自己的博客啦！ 结语 让自己变成一个精神富有的人最有效的方法——做一点儿看似无用的事。 配置过程有点繁琐，当你一步一步的做下来，可能有点心累，但有耐心完成下来还是成就满满的啦，撒花撒花~","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.konebtbx.com/tags/Hexo/"},{"name":"环境搭建","slug":"环境搭建","permalink":"https://blog.konebtbx.com/tags/环境搭建/"}]},{"title":"Markdown 高级语法","slug":"Markdown-高级语法","date":"2019-03-18T05:50:15.000Z","updated":"2019-03-18T07:46:32.059Z","comments":true,"path":"2019/03/18/Markdown-高级语法/","link":"","permalink":"https://blog.konebtbx.com/2019/03/18/Markdown-高级语法/","excerpt":"","text":"Cmd Markdown 高级语法1.内容目录在段落中填写@[TOC]来显示全文的内容目录结构。(当前的Markdown渲染引擎不支持) [TOC] 2.删除线使用~~表示删除线。 例如：这个商品原价199，现价9.9 3.注脚使用[^keyword]表示注脚。 例如：详情请见参考1[^1] 4.LateX公式$表示行内的公式 例如：质能守恒方程的方程式为$E=mc^2​$。 $$表示整行公式： $$\\sum_{i=1}^n a_i=0​$$ $$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$ 访问 MathJax 参考更多使用方法。 5.加强的代码块支持四十多种编程语言的语法高亮显示，行号显示。 非代码示例： 1sudo npm install hexo Python代码块示例： 123456789101112@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' JavaScript代码块示例： 12345678910111213141516/*** nth element in the fibonacci series.* @param n &gt;= 0* @return the nth element, &gt;= 0.*/function fib(n) &#123; var a = 1, b = 1; var tmp; while (--n &gt;= 0) &#123; tmp = a; a += b; b = tmp; &#125; return a;&#125;document.write(fib(10)); 6.流程图示例： 更多语法参考：流程图语法参考 7.表格 项目 价格 数量 计算机 \\$1600 5 手机 \\$12 12 管线 \\$1 234 8.待办事宜TODO列表使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如： - [ ] **Cmd Markdown 开发** - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 - [ ] 支持以 PDF 格式导出文稿 - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) - [x] 改进 LaTex 功能 - [x] 修复 LaTex 公式渲染问题 - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers) - [ ] **七月旅行准备** - [ ] 准备邮轮上需要携带的物品 - [ ] 浏览日本免税店的物品 - [x] 购买蓝宝石公主号七月一日的船票 对应显示如下待办事宜 Todo 列表： Cmd Markdown 开发 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 支持以 PDF 格式导出文稿 新增Todo列表功能 语法参考 改进 LaTex 功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 语法参考 七月旅行准备 准备邮轮上需要携带的物品 浏览日本免税店的物品 购买蓝宝石公主号七月一日的船票 [^1]: 这是一个 注脚 的 参考1。 [^2]: 这是另一个 注脚 的 参考2。st=>start: Start:>https://www.zybuluo.com io=>inputoutput: verification op=>operation: Your Operation cond=>condition: Yes or No? sub=>subroutine: Your Subroutine e=>end st->io->op->cond cond(yes)->e cond(no)->sub->io{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);","categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://blog.konebtbx.com/tags/Markdown/"}]},{"title":"Markdown 入门语法","slug":"Markdown-入门语法","date":"2019-03-17T15:35:52.000Z","updated":"2019-03-19T06:51:20.583Z","comments":true,"path":"2019/03/17/Markdown-入门语法/","link":"","permalink":"https://blog.konebtbx.com/2019/03/17/Markdown-入门语法/","excerpt":"Markdown是个什么玩意？Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。 说了一堆废话，反正就是能够用比较装逼的方式写文章拉，还有点小优雅~ 本文使用的编辑器叫Typora，有兴趣的可以前往官网下载，Typora官网","text":"Markdown是个什么玩意？Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。 说了一堆废话，反正就是能够用比较装逼的方式写文章拉，还有点小优雅~ 本文使用的编辑器叫Typora，有兴趣的可以前往官网下载，Typora官网 Cmd Markdown 简明语法手册1.斜体和粗体使用*和**表示斜体和粗体。 例如：斜体的SB, 粗体的SB 快捷键：ctrl+I斜体，ctrl+B粗体 2.分级标题在行首使用#的数量来表示不同级别的标题，例如# H1 ，## H2。 快捷键：ctrl+1，ctrl+2 3.超链接使用格式[描述]（链接地址）为文字增加超链接。 例如：[百度](www.baidu.com) 效果：百度 4.无序列表使用*，+，-表示无序列表。 例如： 无序列表1 无序列表2 无序列表3 5.文字引用使用 &gt; 表示文字引用。 例如： 甘苦与共，是浮生茶，也是人生路 6.行内代码块使用代码块表示行内代码块。 例如：我在学Markdown 7.代码块行首使用四个空格来表示代码块。 例如： 我是一个代码块，我的行首有4个空格。 8.插入图片使用![描述](图片链接地址)来插入图像。 例如：![刺客五六七](/images/kiss.jpg)，效果如下： 刺客五六七","categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://blog.konebtbx.com/tags/Markdown/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-03-16T03:02:43.130Z","updated":"2018-08-28T15:40:07.227Z","comments":true,"path":"2019/03/16/hello-world/","link":"","permalink":"https://blog.konebtbx.com/2019/03/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}