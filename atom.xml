<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>淋过最大的雨</title>
  
  <subtitle>烈日下的不回头</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.konebtbx.com/"/>
  <updated>2019-07-10T09:26:03.973Z</updated>
  <id>https://blog.konebtbx.com/</id>
  
  <author>
    <name>Kone</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《MDN的HTML入门》中易忽视的知识点</title>
    <link href="https://blog.konebtbx.com/2019/03/20/%E3%80%8AMDN%E7%9A%84HTML%E5%85%A5%E9%97%A8%E3%80%8B%E4%B8%AD%E6%98%93%E5%BF%BD%E8%A7%86%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://blog.konebtbx.com/2019/03/20/《MDN的HTML入门》中易忽视的知识点/</id>
    <published>2019-03-20T15:51:41.000Z</published>
    <updated>2019-07-10T09:26:03.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本人在阅读<a href="https://developer.mozilla.org/zh-CN/docs/learn" target="_blank" rel="noopener">《MDN的HTML入门》</a>时，觉得容易让人忽视的知识点，记录在这里，提醒自己注意，也方便以后回来查阅。</p><blockquote><p>坚持，就是在坚持不下去的时候再坚持。</p></blockquote><h1 id="易忽视的知识点"><a href="#易忽视的知识点" class="headerlink" title="易忽视的知识点"></a>易忽视的知识点</h1><h2 id="1-空白字符"><a href="#1-空白字符" class="headerlink" title="1. 空白字符"></a>1. 空白字符</h2><p>在HTML中无论使用多少个空白（包括空白字符，换行），当HTML渲染的时候，解释器只会渲染<code>一个空格符</code>，以下两行渲染的结果是相同的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>在这里只有一个 空格<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>在这里只有很多          空格<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!-- 要渲染出多个空格可使用&amp;nbsp; 或使用&lt;pre&gt; --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-字符引用"><a href="#2-字符引用" class="headerlink" title="2. 字符引用"></a>2. 字符引用</h2><p>在HTML中，字符<code>&lt;</code>,<code>&gt;</code>,<code>&quot;</code>,<code>&#39;</code>和<code>&amp;</code>是特殊字符，是HTML语法本身的一部分，如果要在文本中使用这些特殊字符而不被浏览器视为代码并被解释，我们必须使用<code>字符引用——表示字符的特殊编码</code>。(注意下表中的字符引用均无空格，如&amp;和lt之间无空格，只是为了让浏览器不渲染成”&lt;”)</p><table><thead><tr><th>原义字符</th><th>等价字符引用</th></tr></thead><tbody><tr><td>&lt;</td><td>&amp; lt;</td></tr><tr><td>&gt;</td><td>&amp; gt;</td></tr><tr><td>“</td><td>&amp; quot;</td></tr><tr><td>‘</td><td>&amp; apos;</td></tr><tr><td>&amp;</td><td>&amp; amp;</td></tr></tbody></table><blockquote><p><strong>提示</strong>: 维基百科上有一个包含所有可用HTML字符实体引用的列表：<a href="http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references" target="_blank" rel="noopener">XML和HTML字符实体引用列表</a>。</p></blockquote><h2 id="3-超链接至文档片段"><a href="#3-超链接至文档片段" class="headerlink" title="3. 超链接至文档片段"></a>3. 超链接至文档片段</h2><p>超链接可以链接到html文档的特定部分（被称为<strong>文档片段</strong>），而不仅仅是文件的顶部。要做到这一点你必须首先分配一个<code>id</code>属性的元素到链接。通常链接到一个特定的标题是有意义的，所以这看起来像下面的内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">"Mailing_address"</span>&gt;</span>Mailing address<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后链接到那个特定的<code>id</code>，您可以在URL的结尾包含它，前面是一个井号（#），例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    Want to write us a letter? Use our </span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"contacts.html#Mailing_address"</span>&gt;</span>mailing address<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你甚至可以用它自己的文档片段参考链接到同一份文件的另一部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    The </span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Mailing_address"</span>&gt;</span>company mailing  address<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    can be found at the bottom of this page.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-电子邮件链接"><a href="#4-电子邮件链接" class="headerlink" title="4. 电子邮件链接"></a>4. 电子邮件链接</h2><p>当点击一个链接或按钮时，打开一个新的电子邮件发送信息而不是连接到一个资源或页面，这种情况是可能做到的。这样做是使用<code>a元素</code>和<code>mailto</code>：URL的方案。<br>其最基本和最常用的使用形式为一个<code>mailto</code>:link （链接），链接简单说明收件人的电子邮件地址。例如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:nowhere@mozilla.org"</span>&gt;</span>Send email to nowhere<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-上标和下标"><a href="#5-上标和下标" class="headerlink" title="5. 上标和下标"></a>5. 上标和下标</h2><p>当你使用日期、化学方程式、和数学方程式时会偶尔使用上标和下标。 <code>sup</code>和<code>sub</code>元素可以解决这样的问题。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>咖啡因的化学方程式是 C<span class="tag">&lt;<span class="name">sub</span>&gt;</span>8<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>H<span class="tag">&lt;<span class="name">sub</span>&gt;</span>10<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>N<span class="tag">&lt;<span class="name">sub</span>&gt;</span>4<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>O<span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>如果 x<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span> 的值为 9，那么 x 的值必为 3 或 -3。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这些代码输出的结果是：</p><p>咖啡因的化学方程式是C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>O<sub>2</sub>。</p><p>如果 x<sup>2</sup> 的值为 9，那么 x 的值必为 3 或 -3。</p><h2 id="6-原生表单部件"><a href="#6-原生表单部件" class="headerlink" title="6. 原生表单部件"></a>6. 原生表单部件</h2><h4 id="1-通用属性"><a href="#1-通用属性" class="headerlink" title="1.通用属性"></a>1.通用属性</h4><p>所有的表单元素都有一组属性，可以对表单小部件进行控制，下面是这些通用属性的列表：</p><table><thead><tr><th>属性名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>autofocus</td><td>(false)</td><td>指定页面加载时元素应该自动具有输入焦点，文档中只有一个元素可以指定这个属性</td></tr><tr><td>disabled</td><td>(false)</td><td>这个布尔属性表示用户不能与元素交互</td></tr><tr><td>form</td><td></td><td>小部件与之相关联的表单元素，属性值必须是同一文档中<code>&lt;form&gt;</code>属性的<code>id</code>属性</td></tr><tr><td>name</td><td></td><td>元素的名称，用于表单数据提交</td></tr><tr><td>value</td><td></td><td>元素的初始值</td></tr></tbody></table><h4 id="2-单行文本域"><a href="#2-单行文本域" class="headerlink" title="2.单行文本域"></a>2.单行文本域</h4><p>使用<code>&lt;input&gt;</code>元素创建一个单行文本域，该元素的<code>type</code>属性值设置为<code>text</code>（默认值为<code>text</code>）。单行文本域只有一个真正的约束：<strong>如果您输入带有换行符的文本，浏览器在发送数据之前将删除这些换行符。</strong></p><h4 id="3-下拉内容"><a href="#3-下拉内容" class="headerlink" title="3.下拉内容"></a>3.下拉内容</h4><h5 id="a-选择框"><a href="#a-选择框" class="headerlink" title="a.选择框"></a>a.选择框</h5><p>一个选择框使用<code>&lt;select&gt;</code>元素创建的。其中有一个或多个<code>&lt;option&gt;</code>元素作为子元素，每个元素都指定了其中一个可能的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"simple"</span> <span class="attr">name</span>=<span class="string">"simple"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Banana<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Cherry<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Lemon<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果需要可以使用<code>selected</code>属性在所需的<code>option</code>上设置选择框的默认值，然后页面加载后将选择该选项。如果一个<code>option</code>元素设置了<code>value</code>属性，那么当提交表单时该属性的值就会被发送。如果忽略了<code>value</code>属性，则使用<code>option</code>元素的内容作为选择框的值。</p><h5 id="b-多选选择框"><a href="#b-多选选择框" class="headerlink" title="b.多选选择框"></a>b.多选选择框</h5><p>默认情况下，选择框只允许用户选择一个值。通过将<code>multiple</code>属性添加到<code>select</code>元素，您可以允许用户通过操作系统提供的默认机制来选择几个值。 (如， 同时按下 Cmd/Ctrl 并点击多个值).</p><p>注意：在多个选项选择框的情况下，选择框不再显示值为下拉内容——相反，它们都显示在一个列表中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span> <span class="attr">id</span>=<span class="string">"multi"</span> <span class="attr">name</span>=<span class="string">"multi"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>Banana<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>Cherry<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>Lemon<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-可选中项"><a href="#4-可选中项" class="headerlink" title="4.可选中项"></a>4.可选中项</h4><p>可选中项是状态可以通过单击它们来更改小部件。有两种可选中项：复选框和单选按钮。两者都使用<code>checked</code>属性，以指示该部件的默认状态: “选中”或”未选中”。</p><p>值得注意的是，这些小部件与其他表单小部件不一样。对于大多数表单部件，一旦表单提交，所有具有<code>name</code>属性的小部件都会被发送，即使没有任何值被填。对于可选中项，只有在勾选时才发送它们的值。如果他们没有被勾选，就不会发送任何东西，甚至连他们的名字也没有。</p><h5 id="a-复选框"><a href="#a-复选框" class="headerlink" title="a.复选框"></a>a.复选框</h5><p>使用<code>type</code>属性值为<code>checkbox</code>的<code>input</code>元素来创建一个复选框。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> <span class="attr">id</span>=<span class="string">"carrots"</span> <span class="attr">name</span>=<span class="string">"carrots"</span> <span class="attr">value</span>=<span class="string">"carrots"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>包含<code>checked</code>属性使复选框在页面加载时自动被选中。</p><h5 id="b-单选按钮"><a href="#b-单选按钮" class="headerlink" title="b.单选按钮"></a>b.单选按钮</h5><p>使用<code>type</code>属性值为<code>radio</code>的<code>input</code>元素来创建一个单选按钮。    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span> <span class="attr">id</span>=<span class="string">"soup"</span> <span class="attr">name</span>=<span class="string">"meal"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>几个单选按钮可以连接在一起。如果它们的<code>name</code>属性共享相同的值，那么它们将被认为属于同一组的按钮。同一组中只有一个按钮可以同时被选；这意味着当其中一个被选中时，所有其他的都将自动未选中。如果没有选中任何一个，那么整个单选按钮池就被认为处于未知状态，并且没有以表单的形式发送任何值。</p><h2 id="7-表单数据校验"><a href="#7-表单数据校验" class="headerlink" title="7.表单数据校验"></a>7.表单数据校验</h2><h4 id="1-内置表单数据验证"><a href="#1-内置表单数据验证" class="headerlink" title="1.内置表单数据验证"></a>1.内置表单数据验证</h4><p><code>HTML5</code>的新功能，不写一行脚本代码的情况下，对用户的输入进行数据校验，这是通过表单元素的<code>检验属性</code>实现的。</p><p>当一个元素校验通过时：</p><p>· 该元素可以通过CSS伪类<code>:valid</code>进行特殊的样式化；</p><p>· 如果用户尝试提交表单，没有其他控制来阻止该操作（如JavaScript阻止提交），那么表单的数据将会被提交。</p><p>当一个元素未校验通过时：</p><p>· 该元素可以通过CSS伪类<code>:invalid</code>来进行样式化；</p><p>· 如果用户尝试提交表单，浏览器会展示出错误消息，并停止表单的提交。</p><h5 id="required属性"><a href="#required属性" class="headerlink" title="required属性"></a>required属性</h5><p>添加一个<code>required</code>属性到你的input元素中，使输入成为必须的，当设置此属性时，若输入为空，该表单将不会被提交，而现实错误消息。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"choose"</span>&gt;</span>Would you prefer a banana or cherry?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"choose"</span> <span class="attr">name</span>=<span class="string">"i_like"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:invalid</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> dashed red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:valid</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用正则表达式验证pattern"><a href="#使用正则表达式验证pattern" class="headerlink" title="使用正则表达式验证pattern"></a>使用正则表达式验证<code>pattern</code></h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"choose"</span>&gt;</span>Would you prefer a banana or a cherry?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"choose"</span> <span class="attr">name</span>=<span class="string">"i_like"</span> <span class="attr">required</span> <span class="attr">pattern</span>=<span class="string">"banana|cherry"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本人在阅读&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/learn&quot; target=&quot;
      
    
    </summary>
    
    
      <category term="HTML入门" scheme="https://blog.konebtbx.com/tags/HTML%E5%85%A5%E9%97%A8/"/>
    
      <category term="阅读笔记" scheme="https://blog.konebtbx.com/tags/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建Hexo主题个人博客</title>
    <link href="https://blog.konebtbx.com/2019/03/18/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAHexo%E4%B8%BB%E9%A2%98%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://blog.konebtbx.com/2019/03/18/从零开始搭建Hexo主题个人博客/</id>
    <published>2019-03-18T15:01:49.000Z</published>
    <updated>2019-03-19T06:46:47.313Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你曾羡慕过那些大佬花里胡哨的个人博客吗？<em>好，没有是吧，不管，</em>反正这是一篇关于如何使用<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>博客框架搭建属于自己的个人博客，并部署到<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>上的详细实操教程，废话不多说，让我们开始吧！</p><h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><blockquote><ul><li><strong>GitHub</strong></li><li><strong>Nodejs</strong></li><li><strong>Hexo</strong></li></ul></blockquote><h2 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h2><p>前往<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git下载页面</a>选择自己的系统安装对应的版本即可。安装完成后可以通过鼠标右键菜单了看到<code>Git GUi Here</code>和<code>git Bash Here</code>，说明安装成功啦！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552924757935.png" alt="安装Git" title>                </div>                <div class="image-caption">安装Git</div>            </figure><h2 id="二、安装NodeJs"><a href="#二、安装NodeJs" class="headerlink" title="二、安装NodeJs"></a>二、安装NodeJs</h2><p>前往<a href="http://nodejs.cn/" target="_blank" rel="noopener">nodejs下载页面</a>选择对应系统的安装程序即可。安装过程均选择默认下一步就可以迅速的安装好。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552969989909.png" alt="安装NodeJs" title>                </div>                <div class="image-caption">安装NodeJs</div>            </figure><h2 id="三、安装Hexo"><a href="#三、安装Hexo" class="headerlink" title="三、安装Hexo"></a>三、安装Hexo</h2><p>在你未来搭建博客的文件夹下（如我个人的路径：E:\MYBLOG），右键选择<code>Git Bash Here</code>打开git控制台，输入命令在全局安装Hexo博客搭建工具:</p><pre><code>$ npm install -g hexo-cli</code></pre><p>等待安装完成后，在命令行中输入<code>hexo version</code>能显示出Hexo的版本号说明安装成功。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552970729896.png" alt="安装Hexo" title>                </div>                <div class="image-caption">安装Hexo</div>            </figure><h1 id="本地搭建博客"><a href="#本地搭建博客" class="headerlink" title="本地搭建博客"></a>本地搭建博客</h1><h2 id="一、初始化博客"><a href="#一、初始化博客" class="headerlink" title="一、初始化博客"></a>一、初始化博客</h2><p>在博客根目录下（如我个人的路径：E:\MYBLOG），运行Hexo初始化命令，其中folder为你指定初始化的文件夹名称：</p><pre><code>$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install</code></pre><p>初始化完成之后，可以发现指定的文件夹下多了许多文件，目录如下：</p><pre><code>.├── _config.yml├── package.json├── scaffolds├── source|     ├── _drafts|    └── _posts└── themes</code></pre><p>具体每个文件夹以及文件的作用可参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a>。</p><h2 id="二、本地运行博客"><a href="#二、本地运行博客" class="headerlink" title="二、本地运行博客"></a>二、本地运行博客</h2><p>在博客根目录下，运行命令<code>hexo generate</code>（缩写为<code>hexo g</code>）生成博客网站的静态文件，运行命令完成后，在目录下会发现多了一个<strong>public的文件夹</strong>；接着运行命令<code>hexo server</code>（缩写为<code>hexo s</code>）在本地启动服务器运行博客。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552974740580.png" alt="启动服务器" title>                </div>                <div class="image-caption">启动服务器</div>            </figure><p>服务器默认情况下，访问网址为：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><p>在浏览器中打开查看效果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552974903517.png" alt="本地博客效果" title>                </div>                <div class="image-caption">本地博客效果</div>            </figure><h1 id="将本地博客部署到GitHub"><a href="#将本地博客部署到GitHub" class="headerlink" title="将本地博客部署到GitHub"></a>将本地博客部署到GitHub</h1><h2 id="一、注册GitHub账号（已有账号的跳过此步骤）"><a href="#一、注册GitHub账号（已有账号的跳过此步骤）" class="headerlink" title="一、注册GitHub账号（已有账号的跳过此步骤）"></a>一、注册GitHub账号（已有账号的跳过此步骤）</h2><p>前往<a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a>，点击右上角的<strong>Sign up</strong> 按步骤填写注册账号。</p><h2 id="二、创建GitHub仓库"><a href="#二、创建GitHub仓库" class="headerlink" title="二、创建GitHub仓库"></a>二、创建GitHub仓库</h2><p>1.点击右上角+号，选择<strong>New repository</strong>新建仓库。</p><p>2.按下图填写，其中<strong>Repository Name</strong>自己按喜好填写，将用于访问你的个人博客。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552975377669.png" alt="创建仓库" title>                </div>                <div class="image-caption">创建仓库</div>            </figure><h2 id="三、配置SSH连接"><a href="#三、配置SSH连接" class="headerlink" title="三、配置SSH连接"></a>三、配置SSH连接</h2><p>1.首先查看你要先看看你的本机是否存在SSH keys，方法：</p><pre><code>$ cd ~/.ssh</code></pre><p>查看本机用户目录下是否有<strong>.ssh文件夹</strong>，若有跳过第2步，进行第3步。</p><p>2.生成ssh密钥，在命令行输入：</p><pre><code>$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></pre><p>生成完密钥后，输入命令，查看生成的密钥并复制下来：</p><pre><code>$ cat ~/.ssh/id_rsa.pub</code></pre><p>3.在GitHub上选择 <code>头像 &gt;&gt; Settings &gt;&gt; SSH and GPG keys &gt;&gt; New SSH key</code>，然后将第2步复制的ssh key粘贴进去，点保存即可。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552976620521.png" alt="添加SSH keys" title>                </div>                <div class="image-caption">添加SSH keys</div>            </figure><p>4.设置用户信息</p><pre><code>$ git config --global user.name &quot;your_name&quot; //用户名$ git config --global user.email  &quot;your_email@expamle.com&quot; //邮箱</code></pre><p>至此，ssh连接配置就完成了，可以与GitHub进行连接了。</p><h2 id="四、将本地的Hexo文件上传至GitHub"><a href="#四、将本地的Hexo文件上传至GitHub" class="headerlink" title="四、将本地的Hexo文件上传至GitHub"></a>四、将本地的Hexo文件上传至GitHub</h2><p>1.打开刚刚创建的仓库，复制地址链接。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552976962193.png" alt="复制链接" title>                </div>                <div class="image-caption">复制链接</div>            </figure><p>2.打开博客根目录（如我个人的目录为：E:\MYBLOG\Hexo），找到配置文件<code>_config.yml</code>并打开，滚动到最后deploy项：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1552977205227.png" alt="配置_config.yml" title>                </div>                <div class="image-caption">配置_config.yml</div>            </figure><p>3.在博客根目录下运行命令，安装hexo部署到git的插件，之后运行<code>hexo generate</code>和<code>hexo deploy</code>（缩写为<code>hexo g -d</code>）。</p><pre><code>$ npm install hexo-deployer-git --save $ hexo generate$ hexo deploy</code></pre><p>至此，你的博客就已经部署到github服务器上了，可以通过GitHub地址（为你的<u>&lt;仓库名&gt;.github.io</u>）访问自己的博客啦！</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><blockquote><p>让自己变成一个精神富有的人最有效的方法——做一点儿看似无用的事。</p></blockquote><p>配置过程有点繁琐，当你一步一步的做下来，可能有点心累，但有耐心完成下来还是成就满满的啦，撒花撒花~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;你曾羡慕过那些大佬花里胡哨的个人博客吗？&lt;em&gt;好，没有是吧，不管，&lt;/em&gt;反正这是一篇关于如何使用&lt;a href=&quot;https://he
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.konebtbx.com/tags/Hexo/"/>
    
      <category term="环境搭建" scheme="https://blog.konebtbx.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 高级语法</title>
    <link href="https://blog.konebtbx.com/2019/03/18/Markdown-%E9%AB%98%E7%BA%A7%E8%AF%AD%E6%B3%95/"/>
    <id>https://blog.konebtbx.com/2019/03/18/Markdown-高级语法/</id>
    <published>2019-03-18T05:50:15.000Z</published>
    <updated>2019-03-18T07:46:32.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cmd-Markdown-高级语法"><a href="#Cmd-Markdown-高级语法" class="headerlink" title="Cmd Markdown 高级语法"></a>Cmd Markdown 高级语法</h1><h2 id="1-内容目录"><a href="#1-内容目录" class="headerlink" title="1.内容目录"></a>1.内容目录</h2><p>在段落中填写<code>@[TOC]</code>来显示全文的内容目录结构。(当前的Markdown渲染引擎不支持)</p><p>[TOC]</p><h2 id="2-删除线"><a href="#2-删除线" class="headerlink" title="2.删除线"></a>2.删除线</h2><p>使用<code>~~</code>表示删除线。</p><p>例如：这个商品原价<del>199</del>，现价9.9</p><h2 id="3-注脚"><a href="#3-注脚" class="headerlink" title="3.注脚"></a>3.注脚</h2><p>使用[^keyword]表示注脚。</p><p>例如：详情请见参考1[^1]</p><h2 id="4-LateX公式"><a href="#4-LateX公式" class="headerlink" title="4.LateX公式"></a>4.LateX公式</h2><p><code>$</code>表示行内的公式</p><p>例如：质能守恒方程的方程式为$E=mc^2​$。</p><p><code>$$</code>表示整行公式：</p><p>$$\sum_{i=1}^n a_i=0​$$</p><p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p><p>访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><h2 id="5-加强的代码块"><a href="#5-加强的代码块" class="headerlink" title="5.加强的代码块"></a>5.加强的代码块</h2><p>支持四十多种编程语言的语法高亮显示，行号显示。</p><p>非代码示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo</span><br></pre></td></tr></table></figure><p>Python代码块示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt'''</span></span><br></pre></td></tr></table></figure><p>JavaScript代码块示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* nth element in the fibonacci series.</span></span><br><span class="line"><span class="comment">* @param n &gt;= 0</span></span><br><span class="line"><span class="comment">* @return the nth element, &gt;= 0.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> tmp;</span><br><span class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    tmp = a;</span><br><span class="line">    a += b;</span><br><span class="line">    b = tmp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><h2 id="6-流程图"><a href="#6-流程图" class="headerlink" title="6.流程图"></a>6.流程图</h2><p>示例：</p><div id="flowchart-0" class="flow-chart"></div><p>更多语法参考：<a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">流程图语法参考</a></p><h2 id="7-表格"><a href="#7-表格" class="headerlink" title="7.表格"></a>7.表格</h2><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">\$1</td><td style="text-align:center">234</td></tr></tbody></table><h2 id="8-待办事宜TODO列表"><a href="#8-待办事宜TODO列表" class="headerlink" title="8.待办事宜TODO列表"></a>8.待办事宜TODO列表</h2><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：</p><pre><code>- [ ] **Cmd Markdown 开发**    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率    - [ ] 支持以 PDF 格式导出文稿    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)    - [x] 改进 LaTex 功能        - [x] 修复 LaTex 公式渲染问题        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)- [ ] **七月旅行准备**    - [ ] 准备邮轮上需要携带的物品    - [ ] 浏览日本免税店的物品    - [x] 购买蓝宝石公主号七月一日的船票</code></pre><p>对应显示如下待办事宜 Todo 列表：</p><ul><li style="list-style: none"><input type="checkbox"> <strong>Cmd Markdown 开发</strong><ul><li style="list-style: none"><input type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li style="list-style: none"><input type="checkbox"> 支持以 PDF 格式导出文稿</li><li style="list-style: none"><input type="checkbox" checked> 新增Todo列表功能 <a href="https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments" target="_blank" rel="noopener">语法参考</a></li><li style="list-style: none"><input type="checkbox" checked> 改进 LaTex 功能<ul><li style="list-style: none"><input type="checkbox" checked> 修复 LaTex 公式渲染问题</li><li style="list-style: none"><input type="checkbox" checked> 新增 LaTex 公式编号功能 <a href="http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers" target="_blank" rel="noopener">语法参考</a></li></ul></li></ul></li><li style="list-style: none"><input type="checkbox"> <strong>七月旅行准备</strong><ul><li style="list-style: none"><input type="checkbox"> 准备邮轮上需要携带的物品</li><li style="list-style: none"><input type="checkbox"> 浏览日本免税店的物品</li><li style="list-style: none"><input type="checkbox" checked> 购买蓝宝石公主号七月一日的船票</li></ul></li></ul><p>[^1]: 这是一个 <em>注脚</em> 的 <strong>参考1</strong>。</p><p>[^2]: 这是另一个 <em>注脚</em> 的 <strong>参考2</strong>。<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start:>https://www.zybuluo.comio=>inputoutput: verificationop=>operation: Your Operationcond=>condition: Yes or No?sub=>subroutine: Your Subroutinee=>endst->io->op->condcond(yes)->econd(no)->sub->io</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Cmd-Markdown-高级语法&quot;&gt;&lt;a href=&quot;#Cmd-Markdown-高级语法&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown 高级语法&quot;&gt;&lt;/a&gt;Cmd Markdown 高级语法&lt;/h1&gt;&lt;h2 id=&quot;1-内容目
      
    
    </summary>
    
    
      <category term="Markdown" scheme="https://blog.konebtbx.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 入门语法</title>
    <link href="https://blog.konebtbx.com/2019/03/17/Markdown-%E5%85%A5%E9%97%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://blog.konebtbx.com/2019/03/17/Markdown-入门语法/</id>
    <published>2019-03-17T15:35:52.000Z</published>
    <updated>2019-03-19T06:51:20.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown是个什么玩意？"><a href="#Markdown是个什么玩意？" class="headerlink" title="Markdown是个什么玩意？"></a>Markdown是个什么玩意？</h1><p>Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p><p><em>说了一堆废话，反正就是能够用比较装逼的方式写文章拉，还有点小优雅~</em></p><p>本文使用的编辑器叫<code>Typora</code>，有兴趣的可以前往官网下载，<a href="https://typora.io/" target="_blank" rel="noopener">Typora官网</a></p><a id="more"></a><h1 id="Cmd-Markdown-简明语法手册"><a href="#Cmd-Markdown-简明语法手册" class="headerlink" title="Cmd Markdown 简明语法手册"></a>Cmd Markdown 简明语法手册</h1><h2 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1.斜体和粗体"></a>1.斜体和粗体</h2><p>使用<code>*</code>和<code>**</code>表示斜体和粗体。</p><p>例如：斜体的<em>SB</em>, 粗体的<strong>SB</strong></p><p>快捷键：<code>ctrl+I</code>斜体，<code>ctrl+B</code>粗体</p><h2 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2.分级标题"></a>2.分级标题</h2><p>在行首使用<code>#</code>的数量来表示不同级别的标题，例如# H1 ，## H2。</p><p>快捷键：<code>ctrl+1</code>，<code>ctrl+2</code></p><h2 id="3-超链接"><a href="#3-超链接" class="headerlink" title="3.超链接"></a>3.超链接</h2><p>使用格式<code>[描述]（链接地址）</code>为文字增加超链接。</p><p>例如：[百度](<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>)</p><p>效果：<a href="www.baidu.com">百度</a></p><h2 id="4-无序列表"><a href="#4-无序列表" class="headerlink" title="4.无序列表"></a>4.无序列表</h2><p>使用<code>*，+，-</code>表示无序列表。</p><p>例如：</p><ul><li>无序列表1</li><li>无序列表2 </li><li>无序列表3</li></ul><h2 id="5-文字引用"><a href="#5-文字引用" class="headerlink" title="5.文字引用"></a>5.文字引用</h2><p>使用 <code>&gt;</code> 表示文字引用。</p><p>例如：</p><blockquote><p>甘苦与共，是浮生茶，也是人生路</p></blockquote><h2 id="6-行内代码块"><a href="#6-行内代码块" class="headerlink" title="6.行内代码块"></a>6.行内代码块</h2><p>使用<code>代码块</code>表示行内代码块。</p><p>例如：我在学<code>Markdown</code></p><h2 id="7-代码块"><a href="#7-代码块" class="headerlink" title="7.代码块"></a>7.代码块</h2><p>行首使用<code>四个空格</code>来表示代码块。</p><p>例如：</p><pre><code>我是一个代码块，我的行首有4个空格。</code></pre><h2 id="8-插入图片"><a href="#8-插入图片" class="headerlink" title="8.插入图片"></a>8.插入图片</h2><p>使用![描述](图片链接地址)来插入图像。</p><p>例如：![刺客五六七](/images/kiss.jpg)，效果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/kiss.jpg" alt="刺客五六七" title>                </div>                <div class="image-caption">刺客五六七</div>            </figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown是个什么玩意？&quot;&gt;&lt;a href=&quot;#Markdown是个什么玩意？&quot; class=&quot;headerlink&quot; title=&quot;Markdown是个什么玩意？&quot;&gt;&lt;/a&gt;Markdown是个什么玩意？&lt;/h1&gt;&lt;p&gt;Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;说了一堆废话，反正就是能够用比较装逼的方式写文章拉，还有点小优雅~&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;本文使用的编辑器叫&lt;code&gt;Typora&lt;/code&gt;，有兴趣的可以前往官网下载，&lt;a href=&quot;https://typora.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Typora官网&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="https://blog.konebtbx.com/tags/Markdown/"/>
    
  </entry>
  
</feed>
